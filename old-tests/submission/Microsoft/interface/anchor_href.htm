<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<head>
<title>HTMLAnchorElement</title>
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
<link rel="author" title="Microsoft" href="http://www.microsoft.com/" />
<link rel="help" href="http://dev.w3.org/html5/spec/text-level-semantics.html#the-a-element" />
</head>
<body onload='runTests()'>
<script src="domtestcase.js" type="text/javascript" ></script>
<script type="text/javascript">
// The anchor tags used for the test are at the bottom of the page
// Just run each test and report if the test passes or fails to the results table
// Failures details show up as console.log events

function test_href_test_0()
{

    oAnchor = document.getElementById('anchor_0');

    try
    {        
        assertEquals('Check that the relative href attribute is still relative\r\n', 'anchor.htm', oAnchor.getAttribute('href'));

        oAnchor.setAttribute('href', '');
        assertEquals('Check that the relative href attribute is an empty string after setting\r\n', '', oAnchor.getAttribute('href'));

        oAnchor.setAttribute('href', 'anchor.htm');
        assertEquals('Check that the relative href attribute is can be set\r\n', 'anchor.htm', oAnchor.getAttribute('href'));

        document.getElementById('test_0_result').innerHTML = 'Pass';    
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_0_result').innerHTML = 'Fail';
    }
}

function test_href_test_1()
{

    oAnchor = document.getElementById('anchor_1');

    try
    {        
        assertEquals('Check that the href attribute is absolute\r\n', 'http://somesite.com/anchor.htm', oAnchor.getAttribute('href'));

        oAnchor.setAttribute('href', '');
        assertEquals('Check that the non-relative href attribute is an empty string after setting\r\n', '', oAnchor.getAttribute('href'));

        oAnchor.setAttribute('href', 'http://somesite.com/anchor.htm');
        assertEquals('Check that the href attribute is can be set and returned\r\n', 'http://somesite.com/anchor.htm', oAnchor.getAttribute('href'));

        document.getElementById('test_1_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_1_result').innerHTML = 'Fail';
    }
}

function test_href_test_2()
{

    oAnchor = document.getElementById('anchor_2');

    try
    {        
        assertEquals('Check that the href attribute is an empty string\r\n', '', oAnchor.getAttribute('href'));

        document.getElementById('test_2_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_2_result').innerHTML = 'Fail';
    }
}

function test_href_test_3()
{

    oAnchor = document.getElementById('anchor_3');

    try
    {        
        assertEquals('Check that a non-existent href attribute\'s value is null\r\n', null, oAnchor.getAttribute('href'));

        document.getElementById('test_3_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_3_result').innerHTML = 'Fail';
    }
}

function test_href_test_4()
{

    oAnchor = document.getElementById('anchor_4');

    try
    {        
        assertEquals('Check that the href attribute\'s value contains the search string\r\n', 'http://www.anothersite.com/path/page.htm?parameter=this%20is%a%20parameter', oAnchor.getAttribute('href'));

        document.getElementById('test_4_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_4_result').innerHTML = 'Fail';
    }
}

function test_href_test_5()
{

    oAnchor = document.getElementById('anchor_5');

    try
    {        
        assertEquals('Check that the href attribute\'s value contains the username/password and the search string\r\n', 'http://username:password@www.anothersite.com/path/page.htm?parameter=this%20is%a%20parameter', oAnchor.getAttribute('href'));

        document.getElementById('test_5_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_5_result').innerHTML = 'Fail';
    }
}

function test_href_test_6()
{

    oAnchor = document.getElementById('anchor_6');

    try
    {        
        assertEquals('Check that the href attribute\'s value has not been lowercased\r\n', 'http://WWW.SomeSite.com/INDEX.html', oAnchor.getAttribute('href'));

        document.getElementById('test_6_result').innerHTML = 'Pass';        
    }
    catch(e)
    {
        console.log(e);
        document.getElementById('test_6_result').innerHTML = 'Fail';
    }
}

function runTests()
{
    test_href_test_0();
    test_href_test_1();
    test_href_test_2();
    test_href_test_3();
    test_href_test_4();
    test_href_test_5();
    test_href_test_6();
}
</script>
<pre>
HTMLAnchorElement Interface Tests For The href attribute
</pre>
<table border='1'>
<tr>
 <td>Test Result</td><td>Test Description</td>
</tr>
<tr>
 <td id='test_0_result'></td><td id='test_0'>Test get/set on a relative href attribute</td>
</tr>
<tr>
 <td id='test_1_result'></td><td id='test_1'>Test get/set on a absolute href attribute</td>
</tr>
<tr>
 <td id='test_2_result'></td><td id='test_2'>Test href attribute is an empty string</td>
</tr>
<tr>
 <td id='test_3_result'></td><td id='test_3'>Test for non-existent href attribute</td>
</tr>
<tr>
 <td id='test_4_result'></td><td id='test_4'>Test that a href attribute contains search string</td>
</tr>
<tr>
 <td id='test_5_result'></td><td id='test_5'>Test that a href attribute contains the username/password and the search string</td>
</tr>
<tr>
 <td id='test_6_result'></td><td id='test_6'>Test that a href attribute has not been lowercased</td>
</tr>
</table>
<pre>
http://dev.w3.org/html5/spec/text-level-semantics.html#the-a-element

interface HTMLAnchorElement : HTMLElement {
  stringifier attribute DOMString href;
           attribute DOMString target;
           attribute DOMString rel;
  readonly attribute DOMTokenList relList;
           attribute DOMString media;
           attribute DOMString hreflang;
           attribute DOMString type;
           attribute DOMString text;

  // URL decomposition IDL attributes
           attribute DOMString protocol;
           attribute DOMString host;
           attribute DOMString hostname;
           attribute DOMString port;
           attribute DOMString pathname;
           attribute DOMString search;
           attribute DOMString hash;
};
</pre>

<hr>
<div id='tags'>Tags Used For Testing</div>
<a id='anchor_0' href='anchor.htm'>Simple Anchor Relative Path</a><br>
<a id='anchor_1' href='http://somesite.com/anchor.htm'>Simple Anchor Non-Relative Path</a><br>
<a id='anchor_2' href=''>Empty String Anchor</a><br>
<a id='anchor_3'>Anchor with no attributes</a><br>
<a id='anchor_4' href='http://www.anothersite.com/path/page.htm?parameter=this%20is%a%20parameter'>href with a search string that is urlencoded</a><br>
<a id='anchor_5' href='http://username:password@www.anothersite.com/path/page.htm?parameter=this%20is%a%20parameter'>href with a username, password and search string that is urlencoded</a><br>
<a id='anchor_6' href='http://WWW.SomeSite.com/INDEX.html'>Simple Anchor with some uppercase letters</a><br>
<hr>
</body>
</html>