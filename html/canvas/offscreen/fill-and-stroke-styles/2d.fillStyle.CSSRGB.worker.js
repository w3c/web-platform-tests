// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.fillStyle.CSSRGB
// Description:CSSRGB works as color input
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("CSSRGB works as color input");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

var offscreenCanvas = new OffscreenCanvas(100, 50);
var ctx = offscreenCanvas.getContext('2d');

ctx.fillStyle = new CSSRGB(1, 0, 1);
_assertSame(ctx.fillStyle, '#ff00ff', "ctx.fillStyle", "'#ff00ff'");
ctx.fillRect(0, 0, 100, 50);
_assertPixel(offscreenCanvas, 50,25, 255,0,255,255, "50,25", "255,0,255,255");

const color = new CSSRGB(0, CSS.percent(50), 0);
ctx.fillStyle = color;
_assertSame(ctx.fillStyle, '#008000', "ctx.fillStyle", "'#008000'");
ctx.fillRect(0, 0, 100, 50);
_assertPixel(offscreenCanvas, 50,25, 0,128,0,255, "50,25", "0,128,0,255");
color.g = 0;
ctx.fillStyle = color;
_assertSame(ctx.fillStyle, '#000000', "ctx.fillStyle", "'#000000'");
ctx.fillRect(0, 0, 100, 50);
_assertPixel(offscreenCanvas, 50,25, 0,0,0,255, "50,25", "0,0,0,255");

color.alpha = 0;
ctx.fillStyle = color;
_assertSame(ctx.fillStyle, 'rgba(0, 0, 0, 0)', "ctx.fillStyle", "'rgba(0, 0, 0, 0)'");
ctx.reset();
color.alpha = 0.5;
ctx.fillStyle = color;
ctx.fillRect(0, 0, 100, 50);
_assertPixel(offscreenCanvas, 50,25, 0,0,0,128, "50,25", "0,0,0,128");

ctx.fillStyle = new CSSHSL(CSS.deg(0), 1, 1).toRGB();
_assertSame(ctx.fillStyle, '#ffffff', "ctx.fillStyle", "'#ffffff'");
ctx.fillRect(0, 0, 100, 50);
_assertPixel(offscreenCanvas, 50,25, 255,255,255,255, "50,25", "255,255,255,255");
t.done();

});
done();
