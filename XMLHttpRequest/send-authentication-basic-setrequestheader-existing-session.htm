<!doctype html>
<html>
  <head>
    <title>XMLHttpRequest: send() - "Basic" authenticated request using setRequestHeader() when there is an existing session</title>
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <!-- These spec references do not make much sense simply because the spec doesn't say very much about this.. -->
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-setrequestheader()-method" data-tested-assertations="following::ol[1]/li[6]" />
    <link rel="help" href="http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#the-send()-method" data-tested-assertations="following::code[contains(@title,'http-authorization')]/.." />
  </head>
  <body>
    <div id="log"></div>
    <script>
      var test = async_test()
      test.step(function() {
        var client = new XMLHttpRequest(),
          urlstart = location.host + location.pathname.replace(/\/[^\/]*$/, '/')
        client.open("GET", location.protocol+'//'+urlstart + "resources/auth4/auth.php", false, 'open-user', 'open-pass') // initial request - this will get a 401 response and cache HTTP auth
        client.send(null)
        assert_equals(client.responseText, 'open-user\nopen-pass')
        assert_equals(client.status, 200)

        client.open("GET", location.protocol+'//'+urlstart + "resources/auth4/auth.php", true) // another request, this time user,pass is omitted and an Authorization header set explicitly
        client.setRequestHeader("x-user", 'user')
        client.setRequestHeader("x-pass", 'pass')
        client.setRequestHeader('Authorization', 'Basic dXNlcjpwYXNz')
        client.onreadystatechange = function () {
          if (client.readyState < 4) {return};
          test.step( function () {
            assert_equals(client.responseText, 'user\npass')
            assert_equals(client.status, 200)
            assert_equals(client.getResponseHeader('x-challenge'), 'DID-NOT')
            test.done()
          } )
        }
        client.send(null) 
      })
    </script>
  </body>
</html>
