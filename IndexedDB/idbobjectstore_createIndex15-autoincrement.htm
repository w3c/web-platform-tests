<!DOCTYPE html>
<meta charset=utf-8>
<title>IDBObjectStore.createIndex() - AutoIncrement in Compound Index</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="support.js"></script>
<script>
  indexeddb_test(
    function(t, db, txn) {
      // Store 1 - No auto-increment
      var store1 = db.createObjectStore("Store1", {keyPath: "id"});
      store1.createIndex("CompoundKey", ["num", "id"]);

      // Add data
      store1.put({id: 1, num: 100});
    },
    function(t, db) {
      var store1 = db.transaction("Store1", "readwrite").objectStore("Store1");

      store1.openCursor().onsuccess = t.step_func(function(e) {
        var item = event.target.result.value;
        store1.index("CompoundKey").get([item.num, item.id]).onsuccess = t.step_func(function(e) {
          assert_equals(e.target.result ? e.target.result.num : null, 100, 'Expected 100.');
          t.done();
        });
      });
    },
    "Explicit Primary Key"
  );

  indexeddb_test(
    function(t, db, txn) {
      // Store 2 - Auto-increment
      var store2 = db.createObjectStore("Store2", {keyPath: "id", autoIncrement: true});
      store2.createIndex("CompoundKey", ["num", "id"]);

      // Add data
      store2.put({num: 100});
    },
    function(t, db) {
      var store2 = db.transaction("Store2", "readwrite").objectStore("Store2");
      store2.openCursor().onsuccess = t.step_func(function(e) {
        var item = event.target.result.value;
        store2.index("CompoundKey").get([item.num, item.id]).onsuccess = t.step_func(function(e) {
          assert_equals(e.target.result ? e.target.result.num : null, 100, 'Expected 100.');
          t.done();
        });
      });
    },
    "Auto-Increment Primary Key"
  );
</script>
<div id="log"></div>