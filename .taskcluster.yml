version: 1
policy:
  pullRequests: collaborators
tasks:
  $flattenDeep:
    - $if: tasks_for == "github-push"
      then:
        $if: event.ref == "refs/heads/master"
        then:
          $map: [{name: firefox, channel: nightly}, {name: chrome, channel: dev}]
          each(browser):
            $map:
              - [testharness, 1, 15]
              - [testharness, 2, 15]
              - [testharness, 3, 15]
              - [testharness, 4, 15]
              - [testharness, 5, 15]
              - [testharness, 6, 15]
              - [testharness, 7, 15]
              - [testharness, 8, 15]
              - [testharness, 9, 15]
              - [testharness, 10, 15]
              - [testharness, 11, 15]
              - [testharness, 12, 15]
              - [testharness, 13, 15]
              - [testharness, 14, 15]
              - [testharness, 15, 15]
              - [reftest, 1, 10]
              - [reftest, 2, 10]
              - [reftest, 3, 10]
              - [reftest, 4, 10]
              - [reftest, 5, 10]
              - [reftest, 6, 10]
              - [reftest, 7, 10]
              - [reftest, 8, 10]
              - [reftest, 9, 10]
              - [reftest, 10, 10]
              - [wdspec, 1, 1]
            each(chunk):
              taskId: {$eval: 'as_slugid(browser.name + browser.channel + chunk[0] + str(chunk[1]))'}
              taskGroupId: {$eval: 'as_slugid("task group")'}
              created: {$fromNow: ''}
              deadline: {$fromNow: '24 hours'}
              provisionerId: aws-provisioner-v1
              # Contributors interested in configurating TaskCluster to run
              # against their fork of WPT should change the `workerType` to
              # "github-worker".
              workerType: wpt-docker-worker
              metadata:
                name: wpt-${browser.name}-${browser.channel}-${chunk[0]}-${chunk[1]}
                description: >-
                  A subset of WPT's "${chunk[0]}" tests (chunk number ${chunk[1]}
                  of ${chunk[2]}), run in the ${browser.channel} release of
                  ${browser.name}.
                owner: ${event.pusher.email}
                source: ${event.repository.url}
              payload:
                image: gsnedders/web-platform-tests:0.13
                maxRunTime: 7200
                artifacts:
                  public/results:
                    path: /home/test/artifacts
                    type: directory
                command:
                  - /bin/bash
                  - --login
                  - -c
                  - set -ex;
                    ~/start.sh
                      ${event.repository.url}
                      ${event.ref[len('refs/heads/'):]}
                      ${event.after}
                      ${browser.name}-${browser.channel};
                    cd ~/web-platform-tests;
                    ./tools/ci/ci_taskcluster.sh
                      --test-type=${chunk[0]}
                      --this-chunk=${chunk[1]}
                      --total-chunks=${chunk[2]}
                      ${browser.name};
    - $if: tasks_for == "github-pull-request"
      then:
        taskId: {$eval: 'as_slugid("something")'}
        taskGroupId: {$eval: 'as_slugid("task group")'}
        created: {$fromNow: ''}
        deadline: {$fromNow: '24 hours'}
        provisionerId: aws-provisioner-v1
        # Contributors interested in configurating TaskCluster to run
        # against their fork of WPT should change the `workerType` to
        # "github-worker".
        workerType: wpt-docker-worker
        metadata:
          name: A name
          description: a description
          owner: ${event.pull_request.user.login}@users.noreply.github.com
          source: ${event.repository.url}
        payload:
          image: gsnedders/web-platform-tests:0.13
          maxRunTime: 7200
          # Bash removes null bytes from string values when set as
          # environment variables. This invalidates the output of `wpt
          # affected-tests` because it uses the null byte as a separator
          # between test names. The list of effected tests is
          # Base64-encoded in order to preserve the null bytes.
          command:
            - /bin/bash
            - --login
            - -c
            - set -ex;
              exit 0;
{operation.command}
