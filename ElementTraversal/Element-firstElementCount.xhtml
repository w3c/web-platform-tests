<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns='http://www.w3.org/1999/xhtml' xmlns:pickle="http://ns.example.org/pickle" >
<head>
	<meta charset="utf-8"/>

	<title id='title'>firstElementChild</title>
	<script src="/resources/testharnessreport.js"></script>	
	<script src="/resources/testharness.js"></script>
</head>

<body>

  <h1 id='h1'>Test of firstElementChild</h1>
  <p id="parentEl">This <span id="first_element_child"><span>is</span> a <span>test</span></span> for the 
  <span id="middle_element_child">ElementTraversal specification</span>  
  <span id="last_element_child" style="display:none;">display: none &#160;</span>.</p>

  <div id="divEl">
    <pickle:dill />
  </div>

  <div id="log">Running test...</div>

	<script>
	  test(function() {
                assert_true(!!document.getElementById("parentEl").firstElementChild);
               }, "firstElementChild must exist");
	  test(function() {
                assert_equals( document.getElementById("title").firstElementChild, null);
                assert_equals( document.getElementById("h1").firstElementChild, null);
               }, "firstElementChild must return null if no child element");
	  test(function() {
	        var parentEl = document.getElementById("parentEl");	        
                assert_not_equals( parentEl.firstElementChild, null);
                assert_equals( parentEl.firstElementChild.getAttribute("id"), "first_element_child");
	        var divEl = document.getElementById("divEl");
                assert_not_equals( divEl.firstElementChild, null);
                assert_equals( divEl.firstElementChild.prefix, "pickle");
               }, "firstElementChild must return the first element child");
	  test(function() {
	        var parentEl = document.getElementById("parentEl");	        
                assert_equals( parentEl.firstElementChild.getAttribute("id"), "first_element_child");
	        var span = document.createElementNS("http://www.w3.org/1999/xhtml", "span");
	        span.setAttribute("id", "dummy");
	        parentEl.insertBefore(span, parentEl.firstElementChild);
                assert_not_equals(parentEl.firstElementChild, null);
                assert_equals( parentEl.firstElementChild.getAttribute("id"), "dummy");
	        parentEl.removeChild(span);
                assert_equals( parentEl.firstElementChild.getAttribute("id"), "first_element_child");
               }, "firstElementChild must be dynamically updated");
	  test(function() {
                assert_readonly(document.getElementById("parentEl"), "firstElementChild");
               }, "firstElementChild must be readonly");
	</script>
</body>
</html>
